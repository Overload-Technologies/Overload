#shader vertex
#version 430 core

layout(location = 0) in vec2 inPos;
layout(location = 1) in vec2 inUV;

out vec2 fragUV;

void main() {
    fragUV = inUV;
    gl_Position = vec4(inPos, 0.0, 1.0);
}

#shader fragment
#version 430 core

in vec2 fragUV;
out vec4 fragColor; // Output color

uniform sampler2D _InputTexture; // Input scene texture
uniform float _Threshold;        // Brightness threshold

float luminance(vec3 color)
{
    return dot(color, vec3(0.2126, 0.7152, 0.0722));
}

void main() {
    vec3 color = texture(_InputTexture, fragUV).rgb;
    float brightness = luminance(color);
    brightness = max(0.0, brightness - _Threshold);
    fragColor = vec4(color * sign(brightness), 1.0);
}
